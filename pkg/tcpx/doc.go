/*
Package tcpx 提供一个高性能、功能丰富的 TCP 服务器框架。

核心特性：
1. 连接管理
  - 基于 goroutine 的并发连接处理
  - 连接池管理和最大连接限制
  - 空闲连接检测和清理
  - 优雅关闭支持

2. 流量控制
  - 连接级别限流
  - 消息速率限制
  - 带宽控制
  - 消息大小限制

3. 协议支持
  - 可插拔的协议接口
  - 内置协议实现
  - 自定义协议支持

4. 错误处理
  - 类型化的错误系统
  - 连接/协议/系统错误分类
  - 错误包装和解包

5. 指标监控
  - 连接统计
  - 消息吞吐量跟踪
  - 错误计数
  - 延迟测量

架构概览：
- Server：管理监听器和连接的中央组件
- Connection：具有读写循环的独立连接处理器
- Protocol：消息编码解码的接口
- Handler：业务逻辑处理接口
- Metrics：性能和健康监控
- Errors：结构化错误处理系统

使用示例：

	server := tcpx.NewServer(":8080",
	    tcpx.WithProtocol(protocol.NewJSONProtocol()),
	    tcpx.WithHandler(myHandler),
	    tcpx.WithMaxConnections(1000),
	)
	server.Start()

设计原则：
1. 模块化：每个组件都有明确的职责
2. 可扩展性：易于添加新的协议和处理器
3. 可靠性：全面的错误处理和恢复机制
4. 性能：高效的资源使用和流量控制
5. 可观察性：内置的指标和监控

线程安全：
所有公共方法通过各种同步机制保证线程安全：
- 计数器使用原子操作
- 复杂数据结构使用互斥锁
- 连接管理使用通道
- 初始化和清理使用 sync.Once

资源管理：
- 通过上下文取消进行连接清理
- 自动空闲连接检测
- 优雅关闭支持
- 资源限制执行
*/
package tcpx
